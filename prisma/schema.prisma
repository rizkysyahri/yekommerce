generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id      String    @id @default(cuid())
  name    String?
  email   String?   @unique
  image   String?
  Address Address[]
  Cart    Cart[]
}

model Product {
  id                   String                 @id @default(cuid())
  name                 String
  price                Int
  rating               Int
  image                String[]
  slug                 String                 @unique
  description          String                 @default("")
  CategoriesOnProducts CategoriesOnProducts[]
  ProductVariant       ProductVariant[]
}

model ProductVariant {
  id        String      @id @default(cuid())
  sku       String
  name      String
  price     Int
  image     String
  label     String
  productId String
  Cart      Cart[]
  Inventory Inventory[]
  product   Product     @relation(fields: [productId], references: [id])
}

model Inventory {
  id               String          @id @default(cuid())
  productVariantId String
  quantity         Int
  status           InventoryStatus
  item             ProductVariant  @relation(fields: [productVariantId], references: [id])
}

model Category {
  id                   String                 @id @default(cuid())
  name                 String
  CategoriesOnProducts CategoriesOnProducts[]
}

model CategoriesOnProducts {
  productId  String
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])

  @@id([productId, categoryId])
}

model Cart {
  id               String         @id @default(cuid())
  userId           String
  quantity         Int
  deletedAt        DateTime?
  checkoutAt       DateTime?
  productVariantId String
  createdAt        DateTime       @default(now())
  item             ProductVariant @relation(fields: [productVariantId], references: [id])
  user             User           @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Address {
  id            String @id @default(cuid())
  userId        String
  label         String
  details       String
  googleMapsUrl String
  phoneNumber   String
  recipientName String
  user          User   @relation(fields: [userId], references: [id])
}

enum InventoryStatus {
  AVAILABLE
  ON_ORDER
  RESERVED
}
